module tb_datapath();

    logic slow_clock, fast_clock, resetb, reset, err;
    logic load_pcard1, load_pcard2, load_pcard3;
    logic load_dcard1, load_dcard2, load_dcard3;
    logic [3:0] pcard3_out;
    logic [3:0] pscore_out, dscore_out;
    logic [6:0] HEX5, HEX4, HEX3;
    logic [6:0] HEX2, HEX1, HEX0;

    datapath DUT(
                    slow_clock, fast_clock, resetb,
                    load_pcard1, load_pcard2, load_pcard3,
                    load_dcard1, load_dcard2, load_dcard3,
                    pcard3_out,
                    pscore_out, dscore_out,
                    HEX5, HEX4, HEX3,
                    HEX2, HEX1, HEX0
                );


    initial forever begin 
        fast_clock = ! fast_clock; #5;
    end

    initial begin

        /*=========================
            Initialization
        ===========================*/
        err = 0; fast_clock = 0; slow_clock = 0; resetb = 0; 
 	load_pcard1 = 0; load_pcard2 = 0; load_pcard3 = 0;
        load_dcard1 = 0; load_dcard2 = 0; load_dcard3 = 0;
	
        slow_clock = ! slow_clock; #15;
        slow_clock = ! slow_clock; #15;

        resetb = 1; #10;
       
        /*=========================
            Test Reset
        ===========================*/
        assert ( (DUT.pcard1_out == 4'b0) && (DUT.pcard2_out == 4'b0) && (DUT.pcard3_out == 4'b0) && (DUT.pscore_out == 4'b0)) 
        else  begin $error("Player card reset failed"); err = 1;  end 

        assert ( (DUT.dcard1_out == 4'b0) && (DUT.dcard2_out == 4'b0) && (DUT.dcard3_out == 4'b0)  && (DUT.dscore_out == 4'b0)) 
        else  begin $error("Dealer card reset failed"); err = 1;  end 

        /*=========================
            Get New Card
        =========================*/
  	slow_clock = ! slow_clock; 
	load_pcard1 = 1;#15;

	slow_clock = ! slow_clock;
	load_pcard1 = 0;

        assert((DUT.new_card !== 4'b0) && (DUT.pcard1_out !== 4'b0 ))
        else begin $error("Player cannot get a new card[1]"); err = 1; end
	
	/*=========================================================
        	Toggle Slow-clock to Test Load Function
        ===========================================================*/
	
        #15;
        $stop;
    end
endmodule
